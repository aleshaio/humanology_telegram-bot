#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ –º–æ–∫–æ–≤ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π."""
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
        from bot.bot import TelegramBot
        print("‚úÖ bot.bot –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from bot.services.site_api_service import site_api_service
        print("‚úÖ site_api_service –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from bot.services.ai_service import ai_service
        print("‚úÖ ai_service –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from bot.services.consultation_service import consultation_service
        print("‚úÖ consultation_service –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from bot.services.test_service import test_service
        print("‚úÖ test_service –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from bot.database.database import db
        print("‚úÖ database –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        print("\nüéâ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

def test_mocks():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–∫-–æ–±—ä–µ–∫—Ç—ã."""
    try:
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∫-–æ–±—ä–µ–∫—Ç–æ–≤...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–∫–∏ –∏–∑ run_local.py
        from run_local import (
            MockSiteAPIService, 
            MockAIService, 
            MockConsultationService, 
            MockTestService, 
            MockDatabase
        )
        print("‚úÖ –ú–æ–∫-–∫–ª–∞—Å—Å—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –º–æ–∫–æ–≤
        mock_site_api = MockSiteAPIService()
        mock_ai = MockAIService()
        mock_consultation = MockConsultationService()
        mock_test = MockTestService()
        mock_db = MockDatabase()
        print("‚úÖ –ú–æ–∫-–æ–±—ä–µ–∫—Ç—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        print("\nüéâ –í—Å–µ –º–æ–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–∫–æ–≤: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ –º–æ–∫–æ–≤ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞\n")
    
    imports_ok = test_imports()
    mocks_ok = test_mocks()
    
    if imports_ok and mocks_ok:
        print("\nüéØ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –∑–∞–ø—É—Å–∫—É.")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python run_local.py")
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏ –∏–ª–∏ –º–æ–∫–∞–º–∏.")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.")
